<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 数据源配置,使用应用内的DBCP数据库连接池  -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>${jdbc.driverClassName}</value></property>
		<property name="url"><value>${jdbc.url}</value></property>
		<property name="username"><value>${jdbc.username}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>
		<property name="maxActive"><value>${jdbc.maxActive}</value></property>
		<property name="maxWait"><value>${jdbc.maxWait}</value></property>
		<property name="maxIdle"><value>${jdbc.maxIdle}</value></property>
		<property name="initialSize"><value>${jdbc.initSize}</value></property>
		<property name="removeAbandoned"><value>true</value></property>
		<property name="testWhileIdle"><value>true</value></property>
		<property name="testOnBorrow"><value>false</value></property>
		<property name="removeAbandonedTimeout"><value>180</value></property>
        <property name="logAbandoned"><value>true</value></property> 
	</bean> -->
	
	<!-- BoneCP configuration -->
	<!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
	   <property name="driverClass"><value>${jdbc.driverClassName}</value></property>
	   <property name="jdbcUrl"><value>${jdbc.url}</value></property>
	   <property name="username"><value>${jdbc.username}</value></property>
	   <property name="password"><value>${jdbc.password}</value></property>
	   <property name="idleConnectionTestPeriod" value="60"/>
	   <property name="idleMaxAge" value="240"/>
	   <property name="maxConnectionsPerPartition" value="30"/>
	   <property name="minConnectionsPerPartition" value="10"/>
	   <property name="partitionCount" value="3"/>
	   <property name="acquireIncrement" value="5"/>
	   <property name="statementsCacheSize" value="100"/>
	   <property name="releaseHelperThreads" value="3"/>
	</bean> -->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	     
	    <property name="filters" value="wall,stat" />
	 
	    <property name="maxActive" value="${jdbc.maxActive}" />
	    <property name="initialSize" value="${jdbc.initSize}" />
	    <property name="maxWait" value="${jdbc.maxWait}" />
	    <property name="minIdle" value="${jdbc.minIdle}" />
	 
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	 
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	     
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
	</bean>

 	<!-- Transaction manager for a single JDBC DataSource -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"> 
			<value>classpath*:cn/bblink/**/map/*.xml</value>
		</property>
		<property name="plugins">
			<list>
				<bean class="cn.bblink.common.interceptor.PagingSQLInterceptor" />
			</list>
		</property>
	</bean>
    
    <bean id="sqlSession"  class="org.mybatis.spring.SqlSessionTemplate">  
          <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean> 
      
	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop> 
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
				
			</props>
		</property>
	</bean>
	 
	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="aspectJExpressionPointcutAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor"> 
		<property name="advice"> 
			<ref bean="txInterceptor" /> 
		</property> 
		<property name="expression"> 
			<value><![CDATA[execution(* cn.bblink..*.*ServiceImpl.*(..)) && @within(org.springframework.stereotype.Service) && 
			(execution(* create*(..)) || execution(* check*(..)) || execution(* delete*(..)) || execution(* update*(..)) || execution(* save*(..)))]]></value> 
		</property> 
	</bean>
	
	
</beans>